-- Роли
create table roles (
    id bigint generated by default as identity primary key,
    name varchar(255) not null unique,
    description varchar(255)
);

-- Пользователи
create table users (
    id bigint generated by default as identity primary key,
    username varchar(255) not null unique,
    password varchar(255) not null,
    email varchar(255),
    enabled  boolean not null
);

-- Таблица связей пользователей и ролей
create table users_roles (
    role_id bigint not null,
    user_id bigint not null,
    primary key (role_id, user_id),
    foreign key (role_id) references roles (id),
    foreign key (user_id) references users (id)
);

--
-- Таблица для информации о клиентах (GUI и мобильное приложение)
create table oauth2_registered_client (
    id varchar(100) primary key,
    client_id varchar(100) not null,
    client_id_issued_at timestamp default CURRENT_TIMESTAMP,
    client_secret varchar(200) default null,
    client_secret_expires_at timestamp default null,
    client_name varchar(200) not null,
    client_authentication_methods varchar(1000) not null,
    authorization_grant_types varchar(1000) not null,
    redirect_uris varchar(1000) not null,
    post_logout_redirect_uris VARCHAR(255) default null,
    scopes varchar(1000) not null,
    client_settings varchar(2000) not null,
    token_settings varchar(2000) not null
);

-- create table users
-- (
--     username varchar(50)  not null primary key,
--     password varchar(500) not null,
--     enabled  boolean not null
-- );

--
-- create index idx_client_id on oauth2_registered_client(client_id);

-- create table authorities
-- (
--     username  varchar(50) not null,
--     authority varchar(50) not null,
--     constraint fk_authorities_users foreign key (username) references users (username),
--     constraint username_authority unique (username, authority)
-- );
--
